{"version":3,"sources":["Components/Recipe.js","Components/search-filter/search-filter.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","calories","image","ingredients","cautions","link","className","src","alt","parseInt","map","ingredient","index","text","SearchFilter","filterLogic","onClick","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","classList","toggle","li","contains","innerText","recipe","label","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60ac8446.chunk.js","sourcesContent":["import {React} from 'react';\nimport './recipe.styles.css';\n\n\n\nconst Recipe = ({title, calories, image, ingredients, /*description */ cautions, link}) => {\n    return(\n        <div className=\"recipe\">\n            <h1 className=\"recipe_title\">{title}</h1>\n            <div className=\"image_div\">\n                <img className=\"image\" src={image} alt=\"\" />\n            </div>\n            <p className=\"calories\">Calories: {parseInt(calories)}</p>\n            <h2>Ingredients:</h2>\n            <ul className=\"ingredients\">\n                {ingredients.map((ingredient, index) => (\n                    <li className=\"ingredient\" key={index}>\n                    <i className=\"fas fa-caret-right\" /> {ingredient.text}\n                </li>\n                ))}\n            </ul>\n\n    \n        </div>\n    )\n}\n\nexport default Recipe;","import React from 'react';\nimport './search-filter.styles.css';\n\nexport const SearchFilter = ({ filterLogic }) => (\n  <div>\n    <ul className=\"filters\">\n      <li className=\"filter\" onClick={filterLogic}>\n        Chicken\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Sushi\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Bread\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Risotto\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Pasta\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Soup\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Dessert\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Salad\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Eggs\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Pizza\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Fish\n      </li>\n      <li className=\"filter\" onClick={filterLogic}>\n        Grill\n      </li>\n    </ul>\n  </div>\n);","import './App.css';\nimport Recipe from './Components/Recipe.js'\nimport React, {useEffect, useState} from \"react\"\nimport { SearchFilter } from './Components/search-filter/search-filter.component'\n\nconst App = () => {\n\n  const APP_ID = 'dc0fe388';\n  const APP_KEY = '4a6043668869b32e68fa7ee617d21530'\n\n  const [recipes, setRecipes] = useState([]); //allows us to put recipes inside of a object with array inside of that\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken')\n\n\nuseEffect( () =>  {\n  getRecipes();\n}, [query]); //speeds up page by ensuring we are only calling the effect once, useEffect only changes when counter does\n\nconst getRecipes = async () => {\nconst response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\nconst data = await response.json();\nsetRecipes(data.hits); //this puts all of our data hits (recipes) into the same state\nconsole.log(data.hits);\n}\n\nconst updateSearch = e => {\n  setSearch(e.target.value);\n};\n\n\nconst getSearch = e => {\n  e.preventDefault();\n  setQuery(search)\n  setSearch('');\n}\n\nconst filterLogic = e => {\n  e.target.classList.toggle('active-filter');\n  const li = e.target;\n  if (li.classList.contains('active-filter')) {\n    setQuery(li.innerText);\n  } else {\n    setQuery('');\n  }\n};\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search Recipes\"/>\n        <button  className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n        </form>\n        <div className=\"search-filter\">\n          <SearchFilter filterLogic={filterLogic} />\n        </div>\n        <div className=\"recipeStyle\">\n        {recipes.map(recipe => (\n          <Recipe\n          key={recipe.recipe.title} \n          title={recipe.recipe.label} \n          calories={recipe.recipe.calories} \n          image={recipe.recipe.image}\n          // description={recipe.recipe.ingredientLines}\n          ingredients={recipe.recipe.ingredients}\n          // cautions={recipe.recipe.cautions}\n          link={recipe.recipe.url}\n          />\n        ))}\n         </div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}